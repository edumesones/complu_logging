name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build with EmailJS credentials
        env:
          EMAILJS_SERVICE_ID: ${{ secrets.EMAILJS_SERVICE_ID }}
          EMAILJS_TEMPLATE_ID: ${{ secrets.EMAILJS_TEMPLATE_ID }}
          EMAILJS_USER_ID: ${{ secrets.EMAILJS_USER_ID }}
          EMAILJS_TO_EMAIL: ${{ secrets.EMAILJS_TO_EMAIL }}
        run: |
          # Crear archivo de configuración con las credenciales reales
          cat > config.prod.js << EOF
          // CONFIGURACIÓN DE PRODUCCIÓN - GENERADA AUTOMÁTICAMENTE
          const EMAILJS_CONFIG = {
              serviceId: '${{ secrets.EMAILJS_SERVICE_ID }}',
              templateId: '${{ secrets.EMAILJS_TEMPLATE_ID }}',
              userId: '${{ secrets.EMAILJS_USER_ID }}',
              toEmail: '${{ secrets.EMAILJS_TO_EMAIL }}'
          };
          
          if (typeof module !== 'undefined' && module.exports) {
              module.exports = EMAILJS_CONFIG;
          }
          EOF
          
          # Reemplazar config.js con config.prod.js en index.html
          sed -i 's/config.js/config.prod.js/g' index.html
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 